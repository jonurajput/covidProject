{"version":3,"sources":["InfoBox.js","Table.js","util.js","Mapping.js","Graph.js","Graph1.js","Map1.js","App.js","serviceWorker.js","index.js","danger.jpg"],"names":["InfoBox","title","cases","total","Card","CardContent","Typography","className","color","Table","countries","map","country","sortData","data","sortedData","sort","a","b","casesTypesColors","hex","multiplier","Mapping","center","zoom","mapZoom","console","log","onClick","MapContainer","TileLayer","url","attribution","Circle","countryInfo","lat","long","fillColor","radius","Math","sqrt","Popup","src","damger","active","recovered","deaths","Graph","graphZoom","useState","dataG","setData","buildchartdata","lastDatapoint","chartData","date","newDatapoint","name","uv","push","useEffect","fetch","then","res","json","chart","fetchData","style","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","fill","Graph1","Map1","zIndex","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","setZoom","mapCountries","setMapCountries","zoommap","setZoomMap","zoomgraph","setZoomGraph","response","value","iso2","sorted","getCountryData","onCountryChange","event","countryCode","target","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.304e631a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Card,CardContent,Typography} from \"@material-ui/core\"\r\nfunction InfoBox({title,cases,total}) {\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n            <Typography className=\"infoBox_title\" color=\"textSecondary\">\r\n                {title}\r\n            </Typography>\r\n            <h2 className=\"infoBox_cases\">{cases}</h2>\r\n            <Typography className=\"infoBox_total\" color=\"textSecondary\">\r\n                {total} Total\r\n            </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\nimport \"./Table.css\"\r\nfunction Table({countries}) {\r\n    return (\r\n        <div className=\"table\">\r\n            {countries.map(({country,cases})=>(\r\n                <tr>\r\n                    <td>{country}</td>\r\n                    <td><strong>{cases}</strong></td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import {Circle,Popup} from \"react-leaflet\"\r\nimport numeral from \"numeral\"\r\nexport const sortData=(data)=>{\r\nconst sortedData=[...data];\r\nsortedData.sort((a,b)=>{\r\n    if(a.cases > b.cases){\r\n        return -1;\r\n    }\r\n    else{\r\n        return 1;\r\n    }\r\n    }\r\n\r\n);\r\nreturn sortedData;\r\n}\r\n","import React from 'react'\r\nimport \"./Mapping.css\"\r\nimport damger from \"./danger.jpg\"\r\nimport {MapContainer,TileLayer,Circle,Popup} from \"react-leaflet\"\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nconst casesTypesColors={\r\n    cases:{\r\n        hex:\"#CC1034\",\r\n        multiplier:400,\r\n    },\r\n    recovered:{\r\n        hex:\"#7dd71d\",\r\n      multiplier:1200,\r\n    },\r\n    deaths:{\r\n        hex:\"#fb4443\",\r\n        multiplier:2000,\r\n    }\r\n};\r\nfunction Mapping({center,zoom,countries,mapZoom}) {\r\n    console.log(countries)\r\n    return (\r\n        <div className=\"map\">\r\n        <ZoomOutMapIcon className=\"zoom\" onClick={()=>mapZoom(true)}/>\r\n           <MapContainer center={center} zoom={zoom}>\r\n               <TileLayer\r\n                   url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                   attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n               />\r\n               {\r\n                   countries.map(data=>(\r\n                        <Circle\r\n                        center={[data.countryInfo.lat,data.countryInfo.long]}\r\n                        color={casesTypesColors.cases.hex}\r\n                        fillColor={casesTypesColors.cases.hex}\r\n                        radius={\r\n                      Math.sqrt(data.cases)*casesTypesColors.cases.multiplier\r\n                         }>\r\n                         <Popup>\r\n                         <div><img className=\"danger\" src={damger}/></div>\r\n                             <div>Total:{data.cases}</div>\r\n                             <div>active:{data.active}</div>\r\n                             <div>recovered:{data.recovered}</div>\r\n                             <div>death:{data.deaths}</div>\r\n                             <div>Country:{data.country}</div>\r\n                             \r\n                         </Popup>\r\n                        </Circle>\r\n\r\n                   ))\r\n               }\r\n           </MapContainer> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mapping;\r\n","import React, { useState,useEffect } from 'react';\r\nimport {\r\n    AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\r\n  } from 'recharts';\r\n  import ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nconst Graph=({graphZoom})=>{\r\n  const[dataG,setData]=useState()\r\n\r\nconst buildchartdata=(data)=>{\r\n    const chartData=[]\r\n    let lastDatapoint;\r\n    for (let date in data.cases){\r\n      if(lastDatapoint){\r\n        const newDatapoint={\r\n          name:date,\r\n          uv:data[\"cases\"][date]-lastDatapoint,\r\n        }\r\n      chartData.push(newDatapoint)\r\n      }\r\n      lastDatapoint=data[\"cases\"][date]\r\n    }\r\n    return chartData;\r\n    }\r\nuseEffect(()=>{\r\n  const fetchData=async ()=>{\r\n    await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      const chart=buildchartdata(data)\r\n      setData(chart)\r\n      console.log(\"x\",chart)\r\n    })\r\n  }\r\n\r\nfetchData();\r\n},[]);\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: 300 }} className=\"graph\" onClick={()=>graphZoom(true)}>\r\n       <ZoomOutMapIcon className=\"zoom\"/>\r\n        <ResponsiveContainer>\r\n          <AreaChart\r\n            data={dataG}\r\n            margin={{\r\n              top: 10, right: 30, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      );\r\n    \r\n}\r\n\r\n\r\nexport default Graph;\r\n   \r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport \"./Graph1.css\"\r\nimport {\r\n    AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\r\n  } from 'recharts';\r\n  import ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nconst Graph1=({graphZoom})=>{\r\n  const[dataG,setData]=useState()\r\n\r\nconst buildchartdata=(data)=>{\r\n    const chartData=[]\r\n    let lastDatapoint;\r\n    for (let date in data.cases){\r\n      if(lastDatapoint){\r\n        const newDatapoint={\r\n          name:date,\r\n          uv:data[\"cases\"][date]-lastDatapoint,\r\n        }\r\n      chartData.push(newDatapoint)\r\n      }\r\n      lastDatapoint=data[\"cases\"][date]\r\n    }\r\n    return chartData;\r\n    }\r\nuseEffect(()=>{\r\n  const fetchData=async ()=>{\r\n    await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      const chart=buildchartdata(data)\r\n      setData(chart)\r\n      console.log(\"x\",chart)\r\n    })\r\n  }\r\n\r\nfetchData();\r\n},[]);\r\n\r\n    return (\r\n        <div  className=\"graph1\" onClick={()=>graphZoom(false)}>\r\n       <ZoomOutMapIcon className=\"zoom2\"/>\r\n        <ResponsiveContainer>\r\n          <AreaChart\r\n            data={dataG}\r\n            margin={{\r\n              top: 10, right: 30, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      );\r\n    \r\n}\r\n\r\n\r\nexport default Graph1;\r\n   \r\n\r\n","import React from 'react'\r\nimport \"./Map1.css\"\r\nimport {MapContainer,TileLayer,Circle,Popup} from \"react-leaflet\"\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nimport damger from \"./danger.jpg\"\r\nconst casesTypesColors={\r\n    cases:{\r\n        hex:\"#CC1034\",\r\n        multiplier:400,\r\n    },\r\n    recovered:{\r\n        hex:\"#7dd71d\",\r\n      multiplier:1200,\r\n    },\r\n    deaths:{\r\n        hex:\"#fb4443\",\r\n        multiplier:2000,\r\n    }\r\n};\r\nfunction Map1({center,zoom,countries,mapZoom}) {\r\n    console.log(countries)\r\n    return (\r\n        <div className=\"map1\">\r\n        <ZoomOutMapIcon className=\"zoom1\" onClick={()=>mapZoom(false)}/>\r\n           <MapContainer center={center} zoom={zoom} style={{zIndex:250}}>\r\n               <TileLayer\r\n                   url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                   attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n               />\r\n               {\r\n                   countries.map(data=>(\r\n                        <Circle\r\n                        center={[data.countryInfo.lat,data.countryInfo.long]}\r\n                        color={casesTypesColors.cases.hex}\r\n                        fillColor={casesTypesColors.cases.hex}\r\n                        radius={\r\n                      Math.sqrt(data.cases)*casesTypesColors.cases.multiplier\r\n                         }>\r\n                         <Popup>\r\n                         <div><img className=\"danger\" src={damger}/></div>\r\n                             <div>Total:{data.cases}</div>\r\n                             <div>active:{data.active}</div>\r\n                             <div>recovered:{data.recovered}</div>\r\n                             <div>death:{data.deaths}</div>\r\n                             <div>Country:{data.country}</div>\r\n                         </Popup>\r\n                        </Circle>\r\n\r\n                   ))\r\n               }\r\n           </MapContainer> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map1;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport InfoBox from \"./InfoBox\"\nimport Table from \"./Table\"\nimport { sortData } from \"./util\"\nimport Mapping from \"./Mapping\"\nimport 'leaflet/dist/leaflet.css'\nimport Graph from \"./Graph\"\nimport Graph1 from \"./Graph1\"\nimport Map1 from \"./Map1\"\nimport { Card, CardContent } from \"@material-ui/core\"\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\"\nfunction App() {\n  const [countries, setCountries] = useState(['INDIA', 'USA', 'UK']);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746, lng: -40.4796\n  });\n  const [mapZoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [zoommap, setZoomMap] = useState(false)\n  const [zoomgraph, setZoomGraph] = useState(false)\n  //https://disease.sh/v3/covid-19/countries\n\n  useState(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => setCountryInfo(data))\n  }, [])\n  useEffect(() => {\n    const getCountryData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => (\n            {\n              name: country.country,\n              value: country.countryInfo.iso2\n            }\n          ));\n          setCountries(countries);\n          const sorted = sortData(data)\n          setMapCountries(data)\n\n          setTableData(sorted);\n        })\n    }\n    getCountryData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value\n    setCountry(countryCode);\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\"\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long])\n        setZoom(10);\n      })\n\n  }\n  return (\n    <div className=\"app\">\n      {zoommap ? <Map1\n        center={mapCenter}\n        zoom={mapZoom}\n        countries={mapCountries}\n        mapZoom={setZoomMap}\n        mapZoom={setZoomMap}\n        /> : \"\"}\n        {zoomgraph ? <Graph1\n          graphZoom={setZoomGraph}\n        />:\"\"}\n      <div className=\"app_left\">\n        <div className=\"app_header\">\n          <h1>Covid-19 tracker</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {\n                countries.map(country => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app_stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n        </div>\n\n        <Mapping\n          center={mapCenter}\n          zoom={mapZoom}\n          countries={mapCountries}\n          mapZoom={setZoomMap}\n        />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new cases</h3>\n          <Graph graphZoom={setZoomGraph}/>\n        </CardContent>\n      </Card>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/danger.66fcbd24.jpg\";"],"sourceRoot":""}